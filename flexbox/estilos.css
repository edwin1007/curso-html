
/*
Flex: usado para crear layouts 
.child--x: por defecto se organizan en orden de creacion, pero se puede cambiar la posicion con, por ejemplo, order: -1;
*/

*{
    margin: 0;
    box-sizing: border-box;
}

body{
    font-family: Arial;
}

.container{
    width: 400px;
    height: 500px;
    margin: 40px auto;
    outline: 4px solid black;

    display: flex;

    /*las siguientes ordenan los elementos de acuerdo al tama√±o de la pantalla o del container*/
    flex-direction: row;
    /* flex-wrap: wrap-reverse; */

    /* justify-content: space-evenly; */

    /* align-items: center; */

    /* align-content: space-evenly; */

    /* align-items: flex-end; */
    /* flex-wrap: wrap; */
}

.child{
    width: 80px;
    height: 80px;
    color: #fff;
    font-size: 2rem;
    text-align: center;

    /* orden de menor a mayor */
    order: 0;

    /*toma el espacio necesario/faltante para el espacio total del contenedor, solo afecta el elemento que tenga flex-grow*/
    flex-grow: 0;

    /*si el contenedor es menor al espacio necesario par los elementos, se resta espacion de manera x a cada elemento*/
    flex-shrink: 0;
}

.child--1{
    background-color: indigo;
    /* order: 0; por defecto */
    /* order: 1; se convierte en el mayor de los 4 */
    order: 0; 
    /* flex-grow: 1; */

    flex-shrink: 0;
}

.child--2{
    background-color: deeppink;
    /* font-size: 80px; */
    /* order: 1; por defecto, pero prioriza 0 para todos*/
    /* flex-grow: 1; */
}

.child--3{
    background-color: royalblue;
    /* order: 2; por defecto, pero prioriza 0 para todos*/
}

.child--4{
    background-color: seagreen;
    /* order: 3; por defecto, pero prioriza 0 para todos*/
    /* order: -1; */
}